

/*****************************
*Author:Sachin Kumar MS
*
*Include all necessary files
*Code is flooded by comments :-)
*forgive me for the bad indentations 
********************************/

#include "stm32f0xx.h"
void I2C_init();
void Map_ports_I2C();
void delay();
void Txmit();
int main()
{
   RCC->CR=RCC_CR_HSION ;//High Speed Internal Oscillator On!! I2c Runs of Independent Clock .
   RCC->AHBENR = RCC_AHBENR_GPIOBEN ; 
   Map_ports_I2C();
   I2C_init();
   
   while(1)
   {
     
   Txmit();
   }
  
}


void I2C_init()
{
  delay();
  delay();
  delay();
  RCC->APB1ENR |= RCC_APB1ENR_I2C1EN; // Enable Peripheral Clock for I2c.
  I2C1->TIMINGR = 0x10420F13; //Prescaler , SCLDEL,SDADEL,SCLH,SCLL.
  I2C1->CR1=I2C_CR1_PE ; //Peripheral Enable through control Registers.
  I2C1->CR2 |= 0xFF0000 ; // FF= 255 bytes of transmission , Master Req Write
  I2C1->CR2 |= 0x50; //Slave Address , LCD I2c Address = 0x50
  I2C1->CR2 |= I2C_CR2_START;//Send Start
  delay();
  delay();
  while((I2C1->ISR & I2C_ISR_TXE)==0); //If Transmit Register is not empty , stay here, means I2C line is busy
  I2C1->TXDR = 0xFE;
  delay();
  delay();
  while((I2C1->ISR & I2C_ISR_TXE)==0); //If Transmit Register is not empty , stay here, means I2C line is busy
  I2C1->TXDR = 0x53;
  delay();
  delay();
  while((I2C1->ISR & I2C_ISR_TXE)==0); //If Transmit Register is not empty , stay here, means I2C line is busy
  I2C1->TXDR = 0x08;
  delay();
 /* while((I2C1->ISR & I2C_ISR_TXE)==0); //If Transmit Register is not empty , stay here, means I2C line is busy
  I2C1->TXDR = 0xFE;
  delay();
  while((I2C1->ISR & I2C_ISR_TXE)==0); //If Transmit Register is not empty , stay here, means I2C line is busy
  I2C1->TXDR = 0x53;
  delay();
  while((I2C1->ISR & I2C_ISR_TXE)==0); //If Transmit Register is not empty , stay here, means I2C line is busy
  I2C1->TXDR = 0x01;
  delay();
  while((I2C1->ISR & I2C_ISR_TXE) == 0);*/
  
  
    
}
void Map_ports_I2C()
{
  
  GPIOB->MODER |= 0xA000; //Enable Alternate functions for PB6 and PB7 I2C.
  GPIOB->OTYPER |= GPIO_OTYPER_OT_7|GPIO_OTYPER_OT_6;//Configure Pb6 and Pb7 output  as Opendrain Pins .
  GPIOB->OSPEEDR |= 0XF000; // Configuring Pb6 and 7 to operate in High Speed Mode.pb6 =scl pb7 = sda
  GPIOB->PUPDR |= 0x5000; //0101 pull up .
  GPIOB->AFR[0] = 0x11000000;
    
}




 void delay (void)
    {
   
            uint8_t x,y;
		
            for( x=0; x < 30; x++ )
            {
      
                    for( y = 0; y < 20; y++ )
	
                          __ASM("nop");
		
            }
		
    }


void Txmit()
{
  
  
        char buf[8] = {'S','A','C','H','I','N'};
        uint8_t i;
        I2C1->TXDR = 0xFE;
        delay();
        delay();
  
        while((I2C1->ISR & I2C_ISR_TXE) == 0);
        I2C1->TXDR = 0x51;
        delay();
        delay();
  
        while((I2C1->ISR & I2C_ISR_TXE) == 0);
        I2C1->TXDR = 0xFE;
        delay();
        delay();
        
        while((I2C1->ISR & I2C_ISR_TXE) == 0);
        I2C1->TXDR = 0x45;
        delay();
        delay();
        
        while((I2C1->ISR & I2C_ISR_TXE) == 0);
        I2C1->TXDR = 0x00;
        delay();
        delay();
        
        while((I2C1->ISR & I2C_ISR_TXE) == 0);
        for(i = 0;i<=7;i++)
        {
           I2C1->TXDR = buf[i];
           while((I2C1->ISR & I2C_ISR_TXE) == 0);
           delay();
           delay();
          
        }
        
        
  
  
}
